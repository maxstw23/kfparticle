//
// File generated by rootcint at Sun Mar 26 06:42:11 2023

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dIgpfsdImntdIgpfs01dIstardIpwgdIxiatongdIgitdIkfparticledIdOsl73_x8664_gcc485dIOBJdIStRootdIKFParticlePerformancedIKFParticlePerformance_Cint
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "KFParticlePerformance_Cint.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void KFMCParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KFMCParticle(void *p = 0);
   static void *newArray_KFMCParticle(Long_t size, void *p);
   static void delete_KFMCParticle(void *p);
   static void deleteArray_KFMCParticle(void *p);
   static void destruct_KFMCParticle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KFMCParticle*)
   {
      ::KFMCParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KFMCParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KFMCParticle", ::KFMCParticle::Class_Version(), "./StRoot/KFParticlePerformance/KFMCParticle.h", 25,
                  typeid(::KFMCParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KFMCParticle::Dictionary, isa_proxy, 4,
                  sizeof(::KFMCParticle) );
      instance.SetNew(&new_KFMCParticle);
      instance.SetNewArray(&newArray_KFMCParticle);
      instance.SetDelete(&delete_KFMCParticle);
      instance.SetDeleteArray(&deleteArray_KFMCParticle);
      instance.SetDestructor(&destruct_KFMCParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KFMCParticle*)
   {
      return GenerateInitInstanceLocal((::KFMCParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KFMCParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void KFPartEfficiencies_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_KFPartEfficiencies(void *p = 0);
   static void *newArray_KFPartEfficiencies(Long_t size, void *p);
   static void delete_KFPartEfficiencies(void *p);
   static void deleteArray_KFPartEfficiencies(void *p);
   static void destruct_KFPartEfficiencies(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::KFPartEfficiencies*)
   {
      ::KFPartEfficiencies *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::KFPartEfficiencies >(0);
      static ::ROOT::TGenericClassInfo 
         instance("KFPartEfficiencies", ::KFPartEfficiencies::Class_Version(), "./StRoot/KFParticlePerformance/KFPartEfficiencies.h", 57,
                  typeid(::KFPartEfficiencies), ::ROOT::DefineBehavior(ptr, ptr),
                  &::KFPartEfficiencies::Dictionary, isa_proxy, 4,
                  sizeof(::KFPartEfficiencies) );
      instance.SetNew(&new_KFPartEfficiencies);
      instance.SetNewArray(&newArray_KFPartEfficiencies);
      instance.SetDelete(&delete_KFPartEfficiencies);
      instance.SetDeleteArray(&deleteArray_KFPartEfficiencies);
      instance.SetDestructor(&destruct_KFPartEfficiencies);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::KFPartEfficiencies*)
   {
      return GenerateInitInstanceLocal((::KFPartEfficiencies*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::KFPartEfficiencies*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr KFMCParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KFMCParticle::Class_Name()
{
   return "KFMCParticle";
}

//______________________________________________________________________________
const char *KFMCParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KFMCParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KFMCParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KFMCParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KFMCParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KFMCParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KFMCParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KFMCParticle*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr KFPartEfficiencies::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *KFPartEfficiencies::Class_Name()
{
   return "KFPartEfficiencies";
}

//______________________________________________________________________________
const char *KFPartEfficiencies::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KFPartEfficiencies*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int KFPartEfficiencies::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::KFPartEfficiencies*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void KFPartEfficiencies::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KFPartEfficiencies*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *KFPartEfficiencies::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::KFPartEfficiencies*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void KFMCParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class KFMCParticle.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KFMCParticle::Class(),this);
   } else {
      R__b.WriteClassBuffer(KFMCParticle::Class(),this);
   }
}

//______________________________________________________________________________
void KFMCParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KFMCParticle.
      TClass *R__cl = ::KFMCParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDaughterIds", (void*)&fDaughterIds);
      R__insp.InspectMember("vector<int>", (void*)&fDaughterIds, "fDaughterIds.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCTrackID", &fMCTrackID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMotherId", &fMotherId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPDG", &fPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsReconstructable[5]", fIsReconstructable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsV0[3]", fIsV0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInitialParticleId", &fInitialParticleId);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KFMCParticle(void *p) {
      return  p ? new(p) ::KFMCParticle : new ::KFMCParticle;
   }
   static void *newArray_KFMCParticle(Long_t nElements, void *p) {
      return p ? new(p) ::KFMCParticle[nElements] : new ::KFMCParticle[nElements];
   }
   // Wrapper around operator delete
   static void delete_KFMCParticle(void *p) {
      delete ((::KFMCParticle*)p);
   }
   static void deleteArray_KFMCParticle(void *p) {
      delete [] ((::KFMCParticle*)p);
   }
   static void destruct_KFMCParticle(void *p) {
      typedef ::KFMCParticle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KFMCParticle

//______________________________________________________________________________
void KFPartEfficiencies::Streamer(TBuffer &R__b)
{
   // Stream an object of class KFPartEfficiencies.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(KFPartEfficiencies::Class(),this);
   } else {
      R__b.WriteClassBuffer(KFPartEfficiencies::Class(),this);
   }
}

//______________________________________________________________________________
void KFPartEfficiencies::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class KFPartEfficiencies.
      TClass *R__cl = ::KFPartEfficiencies::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partPDG[194]", partPDG);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partName[194]", partName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partTitle[194]", partTitle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partDaughterPdg", (void*)&partDaughterPdg);
      R__insp.InspectMember("vector<std::vector<int> >", (void*)&partDaughterPdg, "partDaughterPdg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partMHistoMin[194]", partMHistoMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partMHistoMax[194]", partMHistoMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partMaxMult[194]", partMaxMult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partMass[194]", partMass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partLifeTime[194]", partLifeTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partCharge[194]", partCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partMassSigma[194]", partMassSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "names", (void*)&names);
      R__insp.InspectMember("vector<std::string>", (void*)&names, "names.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "indices", (void*)&indices);
      R__insp.InspectMember("map<std::string,int>", (void*)&indices, "indices.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPdgToIndex", (void*)&fPdgToIndex);
      R__insp.InspectMember("map<int,int>", (void*)&fPdgToIndex, "fPdgToIndex.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_reco1", (void*)&ratio_reco1);
      R__insp.InspectMember("KFMCCounter<double>", (void*)&ratio_reco1, "ratio_reco1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_reco2", (void*)&ratio_reco2);
      R__insp.InspectMember("KFMCCounter<double>", (void*)&ratio_reco2, "ratio_reco2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_reco3", (void*)&ratio_reco3);
      R__insp.InspectMember("KFMCCounter<double>", (void*)&ratio_reco3, "ratio_reco3.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc1", (void*)&mc1);
      R__insp.InspectMember("KFMCCounter<int>", (void*)&mc1, "mc1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc2", (void*)&mc2);
      R__insp.InspectMember("KFMCCounter<int>", (void*)&mc2, "mc2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mc3", (void*)&mc3);
      R__insp.InspectMember("KFMCCounter<int>", (void*)&mc3, "mc3.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reco", (void*)&reco);
      R__insp.InspectMember("KFMCCounter<int>", (void*)&reco, "reco.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_ghost", (void*)&ratio_ghost);
      R__insp.InspectMember("KFMCCounter<double>", (void*)&ratio_ghost, "ratio_ghost.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_bg", (void*)&ratio_bg);
      R__insp.InspectMember("KFMCCounter<double>", (void*)&ratio_bg, "ratio_bg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ratio_clone", (void*)&ratio_clone);
      R__insp.InspectMember("KFMCCounter<double>", (void*)&ratio_clone, "ratio_clone.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ghost", (void*)&ghost);
      R__insp.InspectMember("KFMCCounter<int>", (void*)&ghost, "ghost.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bg", (void*)&bg);
      R__insp.InspectMember("KFMCCounter<int>", (void*)&bg, "bg.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clone", (void*)&clone);
      R__insp.InspectMember("KFMCCounter<int>", (void*)&clone, "clone.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_KFPartEfficiencies(void *p) {
      return  p ? new(p) ::KFPartEfficiencies : new ::KFPartEfficiencies;
   }
   static void *newArray_KFPartEfficiencies(Long_t nElements, void *p) {
      return p ? new(p) ::KFPartEfficiencies[nElements] : new ::KFPartEfficiencies[nElements];
   }
   // Wrapper around operator delete
   static void delete_KFPartEfficiencies(void *p) {
      delete ((::KFPartEfficiencies*)p);
   }
   static void deleteArray_KFPartEfficiencies(void *p) {
      delete [] ((::KFPartEfficiencies*)p);
   }
   static void destruct_KFPartEfficiencies(void *p) {
      typedef ::KFPartEfficiencies current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::KFPartEfficiencies

namespace ROOTDict {
   void maplEintcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOintgR_Dictionary();
   static void *new_maplEintcOintgR(void *p = 0);
   static void *newArray_maplEintcOintgR(Long_t size, void *p);
   static void delete_maplEintcOintgR(void *p);
   static void deleteArray_maplEintcOintgR(void *p);
   static void destruct_maplEintcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,int>*)
   {
      map<int,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,int>", -2, "map2.dll", 0,
                  typeid(map<int,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,int>) );
      instance.SetNew(&new_maplEintcOintgR);
      instance.SetNewArray(&newArray_maplEintcOintgR);
      instance.SetDelete(&delete_maplEintcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOintgR);
      instance.SetDestructor(&destruct_maplEintcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int> : new map<int,int>;
   }
   static void *newArray_maplEintcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,int>[nElements] : new map<int,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOintgR(void *p) {
      delete ((map<int,int>*)p);
   }
   static void deleteArray_maplEintcOintgR(void *p) {
      delete [] ((map<int,int>*)p);
   }
   static void destruct_maplEintcOintgR(void *p) {
      typedef map<int,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,int>

namespace ROOTDict {
   void maplEstringcOintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOintgR_Dictionary();
   static void *new_maplEstringcOintgR(void *p = 0);
   static void *newArray_maplEstringcOintgR(Long_t size, void *p);
   static void delete_maplEstringcOintgR(void *p);
   static void deleteArray_maplEstringcOintgR(void *p);
   static void destruct_maplEstringcOintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<string,int>*)
   {
      map<string,int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,int>", -2, "map.dll", 0,
                  typeid(map<string,int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEstringcOintgR_Dictionary, isa_proxy, 0,
                  sizeof(map<string,int>) );
      instance.SetNew(&new_maplEstringcOintgR);
      instance.SetNewArray(&newArray_maplEstringcOintgR);
      instance.SetDelete(&delete_maplEstringcOintgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOintgR);
      instance.SetDestructor(&destruct_maplEstringcOintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<string,int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<string,int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEstringcOintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int> : new map<string,int>;
   }
   static void *newArray_maplEstringcOintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,int>[nElements] : new map<string,int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOintgR(void *p) {
      delete ((map<string,int>*)p);
   }
   static void deleteArray_maplEstringcOintgR(void *p) {
      delete [] ((map<string,int>*)p);
   }
   static void destruct_maplEstringcOintgR(void *p) {
      typedef map<string,int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<string,int>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

namespace ROOTDict {
   void vectorlEstringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEstringgR_Dictionary();
   static void *new_vectorlEstringgR(void *p = 0);
   static void *newArray_vectorlEstringgR(Long_t size, void *p);
   static void delete_vectorlEstringgR(void *p);
   static void deleteArray_vectorlEstringgR(void *p);
   static void destruct_vectorlEstringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<string>*)
   {
      vector<string> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<string>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<string>", -2, "prec_stl/vector", 49,
                  typeid(vector<string>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEstringgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<string>) );
      instance.SetNew(&new_vectorlEstringgR);
      instance.SetNewArray(&newArray_vectorlEstringgR);
      instance.SetDelete(&delete_vectorlEstringgR);
      instance.SetDeleteArray(&deleteArray_vectorlEstringgR);
      instance.SetDestructor(&destruct_vectorlEstringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<string> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<string>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEstringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<string>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEstringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string> : new vector<string>;
   }
   static void *newArray_vectorlEstringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<string>[nElements] : new vector<string>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEstringgR(void *p) {
      delete ((vector<string>*)p);
   }
   static void deleteArray_vectorlEstringgR(void *p) {
      delete [] ((vector<string>*)p);
   }
   static void destruct_vectorlEstringgR(void *p) {
      typedef vector<string> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<string>

namespace ROOTDict {
   void vectorlEvectorlEintgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEintgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEintgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEintgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p);
   static void destruct_vectorlEvectorlEintgRsPgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<int> >*)
   {
      vector<vector<int> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<int> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<int> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<int> >), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEintgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<int> >) );
      instance.SetNew(&new_vectorlEvectorlEintgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEintgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEintgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEintgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEintgRsPgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<vector<int> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<int> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEintgRsPgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<vector<int> >*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEintgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> > : new vector<vector<int> >;
   }
   static void *newArray_vectorlEvectorlEintgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<int> >[nElements] : new vector<vector<int> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEintgRsPgR(void *p) {
      delete ((vector<vector<int> >*)p);
   }
   static void deleteArray_vectorlEvectorlEintgRsPgR(void *p) {
      delete [] ((vector<vector<int> >*)p);
   }
   static void destruct_vectorlEvectorlEintgRsPgR(void *p) {
      typedef vector<vector<int> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<vector<int> >

/********************************************************
* /gpfs/mnt/gpfs01/star/pwg/xiatong/git/kfparticle/.sl73_x8664_gcc485/OBJ/StRoot/KFParticlePerformance/KFParticlePerformance_Cint.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableKFParticlePerformance_Cint();

extern "C" void G__set_cpp_environmentKFParticlePerformance_Cint() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("StRoot/KFParticlePerformance/KFMCParticle.h");
  G__add_compiledheader("StRoot/KFParticlePerformance/KFPartEfficiencies.h");
  G__cpp_reset_tagtableKFParticlePerformance_Cint();
}
#include <new>
extern "C" int G__cpp_dllrevKFParticlePerformance_Cint() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* KFMCParticle */
static int G__KFParticlePerformance_Cint_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KFMCParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KFMCParticle[n];
     } else {
       p = new((void*) gvp) KFMCParticle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KFMCParticle;
     } else {
       p = new((void*) gvp) KFMCParticle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->AddDaughter((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFMCParticle*) G__getstructoffset())->NDaughters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<int>& obj = ((const KFMCParticle*) G__getstructoffset())->GetDaughterIds();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->CleanDaughters();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetPDG((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetMCTrackID((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetMotherId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFMCParticle*) G__getstructoffset())->GetMCTrackID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFMCParticle*) G__getstructoffset())->GetMotherId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFMCParticle*) G__getstructoffset())->GetPDG());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KFMCParticle*) G__getstructoffset())->IsReconstructable((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetAsReconstructable((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const KFMCParticle*) G__getstructoffset())->IsReconstructableV0((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetAsReconstructableV0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->SetInitialParticleId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFMCParticle*) G__getstructoffset())->InitialParticleId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KFMCParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFMCParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KFMCParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KFMCParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFMCParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFMCParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KFMCParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFMCParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_168_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KFMCParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KFParticlePerformance_Cint_168_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KFMCParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KFMCParticle(*(KFMCParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KFMCParticle G__TKFMCParticle;
static int G__KFParticlePerformance_Cint_168_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KFMCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KFMCParticle*) (soff+(sizeof(KFMCParticle)*i)))->~G__TKFMCParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KFMCParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KFMCParticle*) (soff))->~G__TKFMCParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KFParticlePerformance_Cint_168_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KFMCParticle* dest = (KFMCParticle*) G__getstructoffset();
   *dest = *(KFMCParticle*) libp->para[0].ref;
   const KFMCParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* KFPartEfficiencies */
static int G__KFParticlePerformance_Cint_409_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KFPartEfficiencies* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KFPartEfficiencies[n];
     } else {
       p = new((void*) gvp) KFPartEfficiencies[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new KFPartEfficiencies;
     } else {
       p = new((void*) gvp) KFPartEfficiencies;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((KFPartEfficiencies*) G__getstructoffset())->GetParticleIndex((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<int,int>* pobj;
         const map<int,int> xobj = ((const KFPartEfficiencies*) G__getstructoffset())->GetPdgToIndexMap();
         pobj = new map<int,int>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFPartEfficiencies*) G__getstructoffset())->AddCounter(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const KFPartEfficiencies& obj = ((KFPartEfficiencies*) G__getstructoffset())->operator+=(*(KFPartEfficiencies*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFPartEfficiencies*) G__getstructoffset())->CalcEff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFPartEfficiencies*) G__getstructoffset())->Inc((bool) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (bool) G__int(libp->para[2]), (bool) G__int(libp->para[3])
, (bool) G__int(libp->para[4]), *((string*) G__int(libp->para[5])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFPartEfficiencies*) G__getstructoffset())->IncReco((bool) G__int(libp->para[0]), (bool) G__int(libp->para[1])
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFPartEfficiencies*) G__getstructoffset())->PrintEff();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFPartEfficiencies*) G__getstructoffset())->AddFromFile(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFPartEfficiencies*) G__getstructoffset())->GetNDaughters((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const KFPartEfficiencies*) G__getstructoffset())->GetDaughterPDG((int) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KFPartEfficiencies*) G__getstructoffset())->GetMass((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const KFPartEfficiencies*) G__getstructoffset())->GetMassSigma((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) KFPartEfficiencies::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFPartEfficiencies::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) KFPartEfficiencies::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      KFPartEfficiencies::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((KFPartEfficiencies*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFPartEfficiencies::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KFPartEfficiencies::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) KFPartEfficiencies::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__KFParticlePerformance_Cint_409_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) KFPartEfficiencies::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__KFParticlePerformance_Cint_409_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   KFPartEfficiencies* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new KFPartEfficiencies(*(KFPartEfficiencies*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef KFPartEfficiencies G__TKFPartEfficiencies;
static int G__KFParticlePerformance_Cint_409_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (KFPartEfficiencies*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((KFPartEfficiencies*) (soff+(sizeof(KFPartEfficiencies)*i)))->~G__TKFPartEfficiencies();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (KFPartEfficiencies*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((KFPartEfficiencies*) (soff))->~G__TKFPartEfficiencies();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__KFParticlePerformance_Cint_409_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   KFPartEfficiencies* dest = (KFPartEfficiencies*) G__getstructoffset();
   *dest = *(KFPartEfficiencies*) libp->para[0].ref;
   const KFPartEfficiencies& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* KFMCParticle */

/* KFPartEfficiencies */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncKFParticlePerformance_Cint {
 public:
  G__Sizep2memfuncKFParticlePerformance_Cint(): p(&G__Sizep2memfuncKFParticlePerformance_Cint::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncKFParticlePerformance_Cint::*p)();
};

size_t G__get_sizep2memfuncKFParticlePerformance_Cint()
{
  G__Sizep2memfuncKFParticlePerformance_Cint a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceKFParticlePerformance_Cint() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCParticle))) {
     KFMCParticle *G__Lderived;
     G__Lderived=(KFMCParticle*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCParticle),G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies))) {
     KFPartEfficiencies *G__Lderived;
     G__Lderived=(KFPartEfficiencies*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies),G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableKFParticlePerformance_Cint() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int> >",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* KFMCParticle */
static void G__setup_memvarKFMCParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCParticle));
   { KFMCParticle *p; p=(KFMCParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"fDaughterIds=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fMCTrackID=",0,"sim id of MC track, which corresponds to the particle");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fMotherId=",0,"index in L1 array of mother particle");
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fPDG=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fIsReconstructable[5]=",0,"all particles ,all daughters are reconstructable, all daughters are reconstructed");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"fIsV0[3]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"fInitialParticleId=",0,"for daecays with neutrino");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* KFPartEfficiencies */
static void G__setup_memvarKFPartEfficiencies(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies));
   { KFPartEfficiencies *p; p=(KFPartEfficiencies*)0x1000; if (p) { }
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("nParticles=%lldLL",(long long)KFPartEfficiencies::nParticles).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("fFirstHypernucleusIndex=%lldLL",(long long)KFPartEfficiencies::fFirstHypernucleusIndex).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("fLastHypernucleusIndex=%lldLL",(long long)KFPartEfficiencies::fLastHypernucleusIndex).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("fFirstMissingMassParticleIndex=%lldLL",(long long)KFPartEfficiencies::fFirstMissingMassParticleIndex).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("fLastMissingMassParticleIndex=%lldLL",(long long)KFPartEfficiencies::fLastMissingMassParticleIndex).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("fFirstStableParticleIndex=%lldLL",(long long)KFPartEfficiencies::fFirstStableParticleIndex).data(),0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,-1,-2,1,G__FastAllocString(2048).Format("fLastStableParticleIndex=%lldLL",(long long)KFPartEfficiencies::fLastStableParticleIndex).data(),0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partPDG)-(long)(p)),105,0,0,-1,-1,-1,1,"partPDG[194]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_string),-1,-1,1,"partName[194]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partTitle)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_string),-1,-1,1,"partTitle[194]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partDaughterPdg)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<int> >"),-1,1,"partDaughterPdg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partMHistoMin)-(long)(p)),102,0,0,-1,-1,-1,1,"partMHistoMin[194]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partMHistoMax)-(long)(p)),102,0,0,-1,-1,-1,1,"partMHistoMax[194]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partMaxMult)-(long)(p)),105,0,0,-1,-1,-1,1,"partMaxMult[194]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partMass)-(long)(p)),102,0,0,-1,-1,-1,1,"partMass[194]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partLifeTime)-(long)(p)),102,0,0,-1,-1,-1,1,"partLifeTime[194]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partCharge)-(long)(p)),105,0,0,-1,-1,-1,1,"partCharge[194]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->partMassSigma)-(long)(p)),102,0,0,-1,-1,-1,1,"partMassSigma[194]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEstringcOallocatorlEstringgRsPgR),G__defined_typename("vector<std::string>"),-1,4,"names=",0,"names counters indexed by index of counter");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<std::string,int>"),-1,4,"indices=",0,"indices of counters indexed by a counter shortname");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("map<int,int>"),-1,4,"fPdgToIndex=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEdoublegR),-1,-1,4,"ratio_reco1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEdoublegR),-1,-1,4,"ratio_reco2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEdoublegR),-1,-1,4,"ratio_reco3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEintgR),-1,-1,4,"mc1=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEintgR),-1,-1,4,"mc2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEintgR),-1,-1,4,"mc3=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEintgR),-1,-1,4,"reco=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEdoublegR),-1,-1,4,"ratio_ghost=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEdoublegR),-1,-1,4,"ratio_bg=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEdoublegR),-1,-1,4,"ratio_clone=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEintgR),-1,-1,4,"ghost=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEintgR),-1,-1,4,"bg=",0,"background");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCCounterlEintgR),-1,-1,4,"clone=",0,"background");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarKFParticlePerformance_Cint() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncKFMCParticle(void) {
   /* KFMCParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCParticle));
   G__memfunc_setup("KFMCParticle",1109,G__KFParticlePerformance_Cint_168_0_1, 105, G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDaughter",1085,G__KFParticlePerformance_Cint_168_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("NDaughters",1013,G__KFParticlePerformance_Cint_168_0_3, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughterIds",1396,G__KFParticlePerformance_Cint_168_0_4, 117, G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_vectorlEintcOallocatorlEintgRsPgR), G__defined_typename("vector<int>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CleanDaughters",1418,G__KFParticlePerformance_Cint_168_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPDG",519,G__KFParticlePerformance_Cint_168_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMCTrackID",1086,G__KFParticlePerformance_Cint_168_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMotherId",1096,G__KFParticlePerformance_Cint_168_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMCTrackID",1074,G__KFParticlePerformance_Cint_168_0_9, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMotherId",1084,G__KFParticlePerformance_Cint_168_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPDG",507,G__KFParticlePerformance_Cint_168_0_11, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsReconstructable",1772,G__KFParticlePerformance_Cint_168_0_12, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsReconstructable",2064,G__KFParticlePerformance_Cint_168_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsReconstructableV0",1906,G__KFParticlePerformance_Cint_168_0_14, 103, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAsReconstructableV0",2198,G__KFParticlePerformance_Cint_168_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInitialParticleId",2007,G__KFParticlePerformance_Cint_168_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitialParticleId",1707,G__KFParticlePerformance_Cint_168_0_17, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KFParticlePerformance_Cint_168_0_18, 85, G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KFMCParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KFParticlePerformance_Cint_168_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFMCParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KFParticlePerformance_Cint_168_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KFMCParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KFParticlePerformance_Cint_168_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KFMCParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KFParticlePerformance_Cint_168_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KFParticlePerformance_Cint_168_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFMCParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KFParticlePerformance_Cint_168_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KFMCParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KFParticlePerformance_Cint_168_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFMCParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KFParticlePerformance_Cint_168_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KFMCParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KFMCParticle", 1109, G__KFParticlePerformance_Cint_168_0_30, (int) ('i'), G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCParticle), -1, 0, 1, 1, 1, 0, "u 'KFMCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KFMCParticle", 1235, G__KFParticlePerformance_Cint_168_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KFParticlePerformance_Cint_168_0_32, (int) ('u'), G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFMCParticle), -1, 1, 1, 1, 1, 0, "u 'KFMCParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncKFPartEfficiencies(void) {
   /* KFPartEfficiencies */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies));
   G__memfunc_setup("KFPartEfficiencies",1765,G__KFParticlePerformance_Cint_409_0_1, 105, G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleIndex",1612,G__KFParticlePerformance_Cint_409_0_2, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - pdg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPdgToIndexMap",1556,G__KFParticlePerformance_Cint_409_0_3, 117, G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR), G__defined_typename("map<int,int>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCounter",1001,G__KFParticlePerformance_Cint_409_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - shortname u 'string' - 0 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("operator+=",980,G__KFParticlePerformance_Cint_409_0_5, 117, G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies), -1, 1, 1, 1, 1, 0, "u 'KFPartEfficiencies' - 1 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcEff",644,G__KFParticlePerformance_Cint_409_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Inc",282,G__KFParticlePerformance_Cint_409_0_7, 121, -1, -1, 0, 6, 1, 1, 0, 
"g - - 0 - isReco i - - 0 - nClones "
"g - - 0 - isMC1 g - - 0 - isMC2 "
"g - - 0 - isMC3 u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IncReco",675,G__KFParticlePerformance_Cint_409_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - - 0 - isGhost g - - 0 - isBg "
"u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEff",798,G__KFParticlePerformance_Cint_409_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddFromFile",1053,G__KFParticlePerformance_Cint_409_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDaughters",1301,G__KFParticlePerformance_Cint_409_0_11, 105, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDaughterPDG",1327,G__KFParticlePerformance_Cint_409_0_12, 105, -1, -1, 0, 2, 1, 1, 8, 
"i - - 0 - iParticle i - - 0 - iDaughter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMass",692,G__KFParticlePerformance_Cint_409_0_13, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMassSigma",1189,G__KFParticlePerformance_Cint_409_0_14, 102, -1, -1, 0, 1, 1, 1, 8, "i - - 0 - iParticle", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__KFParticlePerformance_Cint_409_0_15, 85, G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&KFPartEfficiencies::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__KFParticlePerformance_Cint_409_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFPartEfficiencies::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__KFParticlePerformance_Cint_409_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&KFPartEfficiencies::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__KFParticlePerformance_Cint_409_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&KFPartEfficiencies::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__KFParticlePerformance_Cint_409_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__KFParticlePerformance_Cint_409_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFPartEfficiencies::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__KFParticlePerformance_Cint_409_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KFPartEfficiencies::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__KFParticlePerformance_Cint_409_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&KFPartEfficiencies::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__KFParticlePerformance_Cint_409_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&KFPartEfficiencies::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("KFPartEfficiencies", 1765, G__KFParticlePerformance_Cint_409_0_27, (int) ('i'), G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies), -1, 0, 1, 1, 1, 0, "u 'KFPartEfficiencies' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~KFPartEfficiencies", 1891, G__KFParticlePerformance_Cint_409_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__KFParticlePerformance_Cint_409_0_29, (int) ('u'), G__get_linked_tagnum(&G__KFParticlePerformance_CintLN_KFPartEfficiencies), -1, 1, 1, 1, 1, 0, "u 'KFPartEfficiencies' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncKFParticlePerformance_Cint() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalKFParticlePerformance_Cint() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcKFParticlePerformance_Cint() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__KFParticlePerformance_CintLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_KFMCParticle = { "KFMCParticle" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_KFPartEfficiencies = { "KFPartEfficiencies" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_KFMCCounterlEdoublegR = { "KFMCCounter<double>" , 115 , -1 };
G__linked_taginfo G__KFParticlePerformance_CintLN_KFMCCounterlEintgR = { "KFMCCounter<int>" , 115 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableKFParticlePerformance_Cint() {
  G__KFParticlePerformance_CintLN_TClass.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_TBuffer.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_TMemberInspector.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_TObject.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_string.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_KFMCParticle.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_KFPartEfficiencies.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_KFMCCounterlEdoublegR.tagnum = -1 ;
  G__KFParticlePerformance_CintLN_KFMCCounterlEintgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableKFParticlePerformance_Cint() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_TClass);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_TObject);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_string);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_KFMCParticle),sizeof(KFMCParticle),-1,292096,(char*)NULL,G__setup_memvarKFMCParticle,G__setup_memfuncKFMCParticle);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_KFPartEfficiencies),sizeof(KFPartEfficiencies),-1,292096,(char*)NULL,G__setup_memvarKFPartEfficiencies,G__setup_memfuncKFPartEfficiencies);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_KFMCCounterlEdoublegR);
   G__get_linked_tagnum_fwd(&G__KFParticlePerformance_CintLN_KFMCCounterlEintgR);
}
extern "C" void G__cpp_setupKFParticlePerformance_Cint(void) {
  G__check_setup_version(30051515,"G__cpp_setupKFParticlePerformance_Cint()");
  G__set_cpp_environmentKFParticlePerformance_Cint();
  G__cpp_setup_tagtableKFParticlePerformance_Cint();

  G__cpp_setup_inheritanceKFParticlePerformance_Cint();

  G__cpp_setup_typetableKFParticlePerformance_Cint();

  G__cpp_setup_memvarKFParticlePerformance_Cint();

  G__cpp_setup_memfuncKFParticlePerformance_Cint();
  G__cpp_setup_globalKFParticlePerformance_Cint();
  G__cpp_setup_funcKFParticlePerformance_Cint();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncKFParticlePerformance_Cint();
  return;
}
class G__cpp_setup_initKFParticlePerformance_Cint {
  public:
    G__cpp_setup_initKFParticlePerformance_Cint() { G__add_setup_func("KFParticlePerformance_Cint",(G__incsetup)(&G__cpp_setupKFParticlePerformance_Cint)); G__call_setup_funcs(); }
   ~G__cpp_setup_initKFParticlePerformance_Cint() { G__remove_setup_func("KFParticlePerformance_Cint"); }
};
G__cpp_setup_initKFParticlePerformance_Cint G__cpp_setup_initializerKFParticlePerformance_Cint;

