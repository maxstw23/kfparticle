#include "KaonPID.h"
#include <cmath>

const float KaonPID::num_std = 3.5;
const float KaonPID::nSigma_mean_kplus[] = {0.524260764724438, 0.44643069490154913, 0.5058817020609861, 0.5766722593761789, 0.6182703050817452, 0.6501268426850064, 0.668539159589915, 0.668001153896981, 0.7030229759860185};
const float KaonPID::nSigma_std_kplus[] = {0.9333627455174196, 1.0049843805433119, 1.0109899008791587, 0.9932433918248935, 0.9734361449805583, 0.9535114115788283, 0.9305815620817273, 0.8869601370503182, 0.853944852449756};
const float KaonPID::zTOF_mean_kplus[] = {0.001981805376096286, -8.688241990285095e-05, -0.00030468031843891965, -0.0005515684196559231, -0.001026687471457328, -0.0014500993650879996, -0.001676972913917646, -0.0017744719967318558, -0.002190270067250016};
const float KaonPID::zTOF_std_kplus[] = {0.018741654481802126, 0.014235560448393147, 0.012454751308865638, 0.011851960900018386, 0.011256641979522157, 0.010702587167780865, 0.009891036915619022, 0.009331230085839958, 0.009038213408884615};
const float KaonPID::nSigma_mean_kminus[] = {0.487830812709756, 0.4176793795625206, 0.4769026453222911, 0.5521246031537475, 0.5984828572099304, 0.6313861980529921, 0.6385729904535856, 0.6201845833012188, 0.6086941145774608};
const float KaonPID::nSigma_std_kminus[] = {0.9913947370929135, 1.0379957327208322, 1.036407275142315, 1.0201763537405275, 1.0059179445677047, 0.9961415510606892, 0.9860716651360972, 0.9668185639341328, 0.9476174346908289};
const float KaonPID::zTOF_mean_kminus[] = {0.0013545280609282644, -0.0009671762179953886, -0.0007693961294586014, -0.0009369822527424468, -0.0013184988725926617, -0.0015105757742834025, -0.0013546359331942741, -0.0011353611604758632, -0.0011561576831544337};
const float KaonPID::zTOF_std_kminus[] = {0.021751106941990585, 0.015454966459256243, 0.013466009594004237, 0.01265494483053619, 0.012041695667003768, 0.011457727546457665, 0.010770948644854852, 0.010277842954008328, 0.009960664597841246};

// bool KaonPID::IsKaon()
// {
//     int pTbin = static_cast<int>(floor(pT / 0.2));
//     if (pTbin < 1 || pTbin > 13) return false;

//     // rectangular 2D cut
//     if (zTOF > zTOF_mean[pTbin-1] + num_std * zTOF_std[pTbin-1] || zTOF < zTOF_mean[pTbin-1] - num_std * zTOF_std[pTbin-1]) return false;
//     if (nSigma > nSigma_mean[pTbin-1] + num_std * nSigma_std[pTbin-1] || nSigma < nSigma_mean[pTbin-1] - num_std * nSigma_std[pTbin-1]) return false;

//     // decision boundary cut
//     float x = nSigma;
//     if (pTbin == 2)
//     {
//         if (zTOF < -0.00740428142528834*x - 0.309396675573395*sqrt(4.89619390913469e-5*x*x - 0.0608378198738696*x + 1) + 0.237735090905258) return false;
//     }
//     if (pTbin == 3)
//     {
//         if (zTOF < -0.0281648248295252*x - 0.962886729723417*sqrt(0.000443038401028118*x*x - 0.0733453661219122*x + 1) + 0.900787586767528) return false;
//     } 
//     if (pTbin == 4)
//     {
//         if (zTOF > -0.0032406934598125*x + 0.13698443471894*sqrt(0.00280927391482182*x*x + 0.00221847237193595*x + 1) - 0.0716263807099521) return false;
//         if (zTOF < -0.00336998016087225*x - 0.068836431881989*sqrt(-0.00207507565876224*x*x - 0.209026087342191*x + 1) + 0.036153467837767) return false;
//     }
//     if (pTbin == 5)
//     {
//         if (zTOF > -0.00213967993133456*x + 0.0676440825750894*sqrt(0.00250094845330029*x*x - 0.00751326905926489*x + 1) - 0.0243909416305087) return false;
//         if (zTOF < -0.0038428148130518*x - 0.0747002505703554*sqrt(-0.000587438544893784*x*x - 0.207476923610012*x + 1) + 0.0460501491083069) return false;
//     }
//     if (pTbin == 6)
//     {
//         if (zTOF > -0.00175411118868176*x + 0.045714123736958*sqrt(0.000712016627218395*x*x + 0.0104467802787154*x + 1) - 0.0156521506962398) return false;
//         if (zTOF < -0.00388033959336782*x - 0.0748278805316802*sqrt(0.000117474696868625*x*x - 0.213332869998102*x + 1) + 0.0499585395905155) return false;
//     }
//     if (pTbin == 7)
//     {
//         if (zTOF > -0.00135823151446061*x + 0.0393009793559247*sqrt(-8.1076042377777e-6*x*x + 0.0375948173484308*x + 1) - 0.0158373005570447) return false;
//         if (zTOF < -0.00311068719528727*x - 0.0700715902989559*sqrt(-0.000765659313779474*x*x - 0.217735809837499*x + 1) + 0.0482913994238915) return false;
//     }
//     if (pTbin == 8)
//     {
//         if (zTOF > -0.000810505839619179*x + 0.035206338530538*sqrt(-0.00195961733178985*x*x + 0.0541320905456119*x + 1) - 0.0164687958929413) return false;
//         if (zTOF < -0.00191783901912651*x - 0.0639157056402445*sqrt(-0.00304299323779905*x*x - 0.221235277690126*x + 1) + 0.0443158469801602) return false;
//     }
//     if (pTbin == 9)
//     {
//         if (zTOF > -0.000406519374536317*x + 0.0325315274896498*sqrt(-0.00397166241302228*x*x + 0.0691104563603377*x + 1) - 0.0174909352483898) return false;
//         if (zTOF < -0.00117710333749502*x - 0.0625692793323821*sqrt(-0.0050827902323328*x*x - 0.224972761172321*x + 1) + 0.0440215077317855) return false;
//     }
//     if (pTbin == 10)
//     {
//         if (zTOF > -0.000641677937167733*x + 0.0329797605420023*sqrt(-0.00220695223387111*x*x + 0.104659981398042*x + 1) - 0.0205892248384706) return false;
//         if (zTOF < -0.00292830827141557*x - 0.083739039155731*sqrt(-0.00215051665817975*x*x - 0.226925786617247*x + 1) + 0.0644503524452624) return false;
//     }
//     if (pTbin == 11)
//     {
//         if (zTOF > -0.00137784830844077*x + 0.035638687372475*sqrt(0.00294264136383392*x*x + 0.157384594506829*x + 1) - 0.0252045806382778) return false;
//         if (zTOF < -0.0150274260629011*x - 0.198569461690679*sqrt(0.00544366373304271*x*x - 0.225075543335691*x + 1) + 0.177409826671311) return false;
//     }
//     if (pTbin == 12)
//     {
//         if (zTOF > -0.00566941809163731*x + 0.0458519456335069*sqrt(0.00790935845244771*x*x + 0.3230342971309*x + 1) - 0.0356139852636468) return false;
//         if (zTOF < 0.0248326337918246*x + 0.119539504385017*sqrt(0.0506554349229539*x*x - 0.305847993126399*x + 1) - 0.14284515326791) return false;
//     }
//     if (pTbin == 13)
//     {
//         if (zTOF > -0.00531080931414015*x + 0.0262419206001528*sqrt(-0.00839055140322048*x*x + 0.60896295699047*x + 1) - 0.0191979388639507) return false;
//         if (zTOF < -0.016548430140058*x - 0.0702206203108405*sqrt(0.0181691525107892*x*x - 0.533465865459766*x + 1) + 0.0527554962191577) return false;
//     }

//     return true;
// }

bool KaonPID::IsKaonSimple(float nSigmaCut, int charge)
{
    int pTbin = static_cast<int>(floor(pT / 0.2));
    if (pTbin < 1 || pTbin > 9) return false;
    if (std::abs(charge) != 1) return false;

    // loose nSigma cut
    if (charge > 0)
    {
        if (fabs(nSigma - nSigma_mean_kplus[pTbin-1])*1.0 / nSigma_std_kplus[pTbin-1] > nSigmaCut) return false;
        return true;
    }
    else
    {
        if (fabs(nSigma - nSigma_mean_kminus[pTbin-1])*1.0 / nSigma_std_kminus[pTbin-1]> nSigmaCut) return false;
        return true;
    }
}