#include "PionPID.h"
#include <cmath>

const float PionPID::num_std = 3.5;
const float PionPID::nSigma_mean_piplus[] = {0.5172574838601324, 0.5406139994545175, 0.5685486670476058, 0.5344733663771382, 0.49436089694291246, 0.4603414809242065, 0.42720096570839733, 0.3901453906880524, 0.34239177550148964, 0.27799814684995383};
const float PionPID::nSigma_std_piplus[] = {1.0785663045184555, 1.0498564493999676, 1.0214694978206957, 1.0062428420212832, 0.9969307745273558, 0.9914228113672997, 0.988554424539734, 0.9918256410085884, 1.0083336866249117, 1.0432030568700255};
// const float PionPID::zTOF_mean_piplus[] = {-0.002031908563357636, -0.001697046059107228, -0.002000776415432681, -0.0023532116701034914, -0.0026399529073630476, -0.0028087234326465644, -0.002913504653562801, -0.003039066940676457, -0.0030933407029496668};
// const float PionPID::zTOF_std_piplus[] = {0.0205333925287569, 0.011701093658640981, 0.011424072927292908, 0.0109609569231659, 0.010514741036527287, 0.010099302182816454, 0.009794496138812068, 0.009187103905912035, 0.008909068665850513};
const float PionPID::nSigma_mean_piminus[] = {0.4961689158439063, 0.529441156597391, 0.5664168427060067, 0.5355380540169318, 0.4961384249576719, 0.4625360715264887, 0.43109723945283296, 0.3998787019053495, 0.36377286926802105, 0.319541912172933};
const float PionPID::nSigma_std_piminus[] = {1.0804506814948749, 1.049048291950112, 1.0206250120643778, 1.0055839710166967, 0.996588029744264, 0.990551389241719, 0.9867527998943671, 0.9876729273103109, 0.9968284189373825, 1.0164063359251159};
// const float PionPID::zTOF_mean_piminus[] = {-0.0021235799456493045, -0.001715013885990273, -0.002028014534946538, -0.002437948404800253, -0.0025972904709139263, -0.0027975283328883515, -0.0029214569994801837, -0.0030170989485372914, -0.0029499958886713027};
// const float PionPID::zTOF_std_piminus[] = {0.02060597012421243, 0.011571211742495478, 0.011369278038847273, 0.010317494091657265, 0.010477332070051103, 0.010011077298505028, 0.009670770452144416, 0.009113214703763979, 0.008784551290996177};

bool PionPID::IsPionSimple(float nSigmaCut, int charge)
{
    int pTbin = static_cast<int>(floor(pT / 0.2));
    if (pTbin > 9) return false;
    if (std::abs(charge) != 1) return false;

    // loose nSigma cut
    if (charge > 0)
    {
        if (fabs(nSigma-nSigma_mean_piplus[pTbin])*1.0 / nSigma_std_piplus[pTbin] > nSigmaCut) return false;
        return true;
    }
    else
    {
        
        if (fabs(nSigma-nSigma_mean_piminus[pTbin])*1.0 / nSigma_std_piminus[pTbin] > nSigmaCut) return false;
        return true;
    }
}