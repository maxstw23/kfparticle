#include "PionPID.h"
#include <cmath>

const float PionPID::num_std = 3.5;
const float PionPID::nSigma_mean_piplus[] = {0.6299707089553763, 0.6374867458929604, 0.591876842416433, 0.5449213455420763, 0.5061675514938967, 0.47619017136599406, 0.44679220464847624, 0.4348699649558639, 0.4361380601576207};
const float PionPID::nSigma_std_piplus[] = {1.1830633849074381, 1.112716199966198, 1.0579365537847136, 1.0131085383798453, 0.973639826312159, 0.9526745799190617, 0.9273178717987158, 0.8913689622513384, 0.8354376060963643};
const float PionPID::zTOF_mean_piplus[] = {-0.002031908563357636, -0.001697046059107228, -0.002000776415432681, -0.0023532116701034914, -0.0026399529073630476, -0.0028087234326465644, -0.002913504653562801, -0.003039066940676457, -0.0030933407029496668};
const float PionPID::zTOF_std_piplus[] = {0.0205333925287569, 0.011701093658640981, 0.011424072927292908, 0.0109609569231659, 0.010514741036527287, 0.010099302182816454, 0.009794496138812068, 0.009187103905912035, 0.008909068665850513};
const float PionPID::nSigma_mean_piminus[] = {0.6198374387200797, 0.6347187717154925, 0.5918047018737811, 0.5639848010434992, 0.5058896666076602, 0.4780887879044592, 0.45182429532593427, 0.434635809034556, 0.40268996566184784};
const float PionPID::nSigma_std_piminus[] = {1.1853357679043015, 1.112083812798098, 1.0553657352660242, 1.0031678384374831, 0.9719218108117517, 0.9520606306465782, 0.926758510210851, 0.89403932994319, 0.8499235831365038};
const float PionPID::zTOF_mean_piminus[] = {-0.0021235799456493045, -0.001715013885990273, -0.002028014534946538, -0.002437948404800253, -0.0025972904709139263, -0.0027975283328883515, -0.0029214569994801837, -0.0030170989485372914, -0.0029499958886713027};
const float PionPID::zTOF_std_piminus[] = {0.02060597012421243, 0.011571211742495478, 0.011369278038847273, 0.010317494091657265, 0.010477332070051103, 0.010011077298505028, 0.009670770452144416, 0.009113214703763979, 0.008784551290996177};

// bool PionPID::IsPion()
// // deprecated
// {
//     int pTbin = static_cast<int>(floor(pT / 0.2));
//     if (pTbin < 1 || pTbin > 8) return false;

//     // rectangular 2D cut
//     if (zTOF > zTOF_mean[pTbin-1] + num_std * zTOF_std[pTbin-1] || zTOF < zTOF_mean[pTbin-1] - num_std * zTOF_std[pTbin-1]) return false;
//     if (nSigma > nSigma_mean[pTbin-1] + num_std * nSigma_std[pTbin-1] || nSigma < nSigma_mean[pTbin-1] - num_std * nSigma_std[pTbin-1]) return false;

//     // decision boundary cut
//     float x = nSigma;
//     if (pTbin == 2)
//     {
//         if (zTOF < -0.00740428142528834*x - 0.309396675573395*sqrt(4.89619390913469e-5*x*x - 0.0608378198738696*x + 1) + 0.237735090905258) return false;
//     }
//     if (pTbin == 3)
//     {
//         if (zTOF < -0.0281648248295252*x - 0.962886729723417*sqrt(0.000443038401028118*x*x - 0.0733453661219122*x + 1) + 0.900787586767528) return false;
//     } 
//     if (pTbin == 4)
//     {
//         if (zTOF > -0.0032406934598125*x + 0.13698443471894*sqrt(0.00280927391482182*x*x + 0.00221847237193595*x + 1) - 0.0716263807099521) return false;
//         if (zTOF < -0.00336998016087225*x - 0.068836431881989*sqrt(-0.00207507565876224*x*x - 0.209026087342191*x + 1) + 0.036153467837767) return false;
//     }
//     if (pTbin == 5)
//     {
//         if (zTOF > -0.00213967993133456*x + 0.0676440825750894*sqrt(0.00250094845330029*x*x - 0.00751326905926489*x + 1) - 0.0243909416305087) return false;
//         if (zTOF < -0.0038428148130518*x - 0.0747002505703554*sqrt(-0.000587438544893784*x*x - 0.207476923610012*x + 1) + 0.0460501491083069) return false;
//     }
//     if (pTbin == 6)
//     {
//         if (zTOF > -0.00175411118868176*x + 0.045714123736958*sqrt(0.000712016627218395*x*x + 0.0104467802787154*x + 1) - 0.0156521506962398) return false;
//         if (zTOF < -0.00388033959336782*x - 0.0748278805316802*sqrt(0.000117474696868625*x*x - 0.213332869998102*x + 1) + 0.0499585395905155) return false;
//     }
//     if (pTbin == 7)
//     {
//         if (zTOF > -0.00135823151446061*x + 0.0393009793559247*sqrt(-8.1076042377777e-6*x*x + 0.0375948173484308*x + 1) - 0.0158373005570447) return false;
//         if (zTOF < -0.00311068719528727*x - 0.0700715902989559*sqrt(-0.000765659313779474*x*x - 0.217735809837499*x + 1) + 0.0482913994238915) return false;
//     }
//     if (pTbin == 8)
//     {
//         if (zTOF > -0.000810505839619179*x + 0.035206338530538*sqrt(-0.00195961733178985*x*x + 0.0541320905456119*x + 1) - 0.0164687958929413) return false;
//         if (zTOF < -0.00191783901912651*x - 0.0639157056402445*sqrt(-0.00304299323779905*x*x - 0.221235277690126*x + 1) + 0.0443158469801602) return false;
//     }

//     return true;
// }

bool PionPID::IsPionSimple(float nSigmaCut, int charge)
{
    int pTbin = static_cast<int>(floor(pT / 0.2));
    if (pTbin < 1 || pTbin > 9) return false;
    if (std::abs(charge) != 1) return false;

    // loose nSigma cut
    if (charge > 0)
    {
        if (fabs(nSigma-nSigma_mean_piplus[pTbin-1])*1.0 / nSigma_std_piplus[pTbin-1] > nSigmaCut) return false;
        return true;
    }
    else
    {
        if (fabs(nSigma-nSigma_mean_piminus[pTbin-1])*1.0 / nSigma_std_piminus[pTbin-1] > nSigmaCut) return false;
        return true;
    }
}